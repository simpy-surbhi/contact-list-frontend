{"version":3,"sources":["reportWebVitals.ts","App.theme.tsx","config/Config.ts","view/Address/components/styles.ts","view/Address/components/DetailDialog.tsx","view/Address/components/List/styles.ts","view/Address/components/List/AddressList.tsx","view/Address/components/Tab/styles.ts","view/Address/components/Tab/AddressTab.tsx","view/Address/Address.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppTheme","children","theme","createTheme","typography","fontSize","zIndex","appBar","palette","text","primary","blueGrey","background","default","grey","main","contrastText","secondary","danger","light","red","dark","success","green","warning","amber","info","cyan","props","MuiAutocomplete","autoHighlight","MuiIcon","MuiGrid","spacing","MuiInputLabel","shrink","overrides","tag","margin","height","mixins","ellipsis","overflow","textOverflow","whiteSpace","popperResponsive","position","float","width","marginTop","backgroundColor","border","WebkitBoxShadow","boxShadow","color","dropdown","borderRadius","top","minWidth","padding","textAlign","listStyle","WebkitBackgroundClip","backgroundClip","dropdownItem","WebkitTransition","MozTransition","OTransition","MsTransition","transition","display","clear","fontWeight","minHeight","lineHeight","drawerWidth","loadingDelay","ThemeProvider","Config","useStyles","makeStyles","root","flexDirection","cardMedia","paddingTop","tableHeader","borderBottom","tableValue","title","marginBottom","DetailDialog","dialogProps","selectedContact","setModal","React","contact","setContact","classes","tableData","key","value","email","phone","location","street","number","name","city","state","postcode","map","item","index","TableRow","TableCell","className","align","toString","Dialog","DialogTitle","DialogContent","Grid","container","xs","md","lg","CardMedia","image","picture","large","Typography","variant","last","first","Table","size","TableBody","DialogActions","Button","onClick","e","maxHeight","overflowY","card","cardContent","alignItems","paddingLeft","img","snackbarStyle","AddressList","tabValue","setContacts","contacts","showModal","error","setError","setSelectedContact","displayContacts","filter","f","charAt","toLowerCase","url","a","fetch","resp","json","respJson","results","fetchContacts","length","slice","Math","ceil","Card","CardActionArea","ev","CardContent","thumbnail","Box","KeyboardArrowRight","open","onClose","fullWidth","maxWidth","Snackbar","autoHideDuration","message","ContentProps","box","justifyContent","tab","common","white","AddressTab","setTab","tabsInfo","tabName","count","forEach","setAllTabsInfo","tabsInfoState","Tabs","onChange","_event","newValue","textColor","indicatorColor","TabIndicatorProps","style","t","Tab","label","href","disabled","Address","pathName","window","substring","indexOf","toUpperCase","App","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a099bcd0.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  amber,\n  blueGrey,\n  cyan,\n  green,\n  grey,\n  red,\n} from \"@material-ui/core/colors\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\nimport * as React from \"react\";\n\nexport const AppTheme: React.FC = ({ children }) => {\n  // https://material-ui.com/customization/themes/\n  const theme = createTheme({\n    typography: {\n      fontSize: 12,\n    },\n\n    zIndex: {\n      appBar: 0,\n    },\n\n    palette: {\n      text: { primary: blueGrey[800] },\n      background: { default: grey[200] },\n\n      primary: { main: \"#f3333e\", contrastText: \"#ffffff\" },\n      secondary: { main: \"#01aae9\" },\n\n      danger: {\n        light: red[300],\n        main: red[500],\n        dark: red[700],\n      },\n      success: {\n        light: green[300],\n        main: \"#61ab9a\",\n        dark: green[700],\n      },\n      warning: {\n        light: amber[300],\n        main: amber[500],\n        dark: amber[700],\n      },\n      info: {\n        light: cyan[300],\n        main: cyan[500],\n        dark: cyan[700],\n      },\n    },\n\n    props: {\n      // @ts-ignore can't override while component in lab https://github.com/mui-org/material-ui/issues/12164\n      MuiAutocomplete: {\n        autoHighlight: true,\n      },\n      MuiIcon: {\n        fontSize: \"small\",\n      },\n      MuiGrid: {\n        spacing: 2,\n      },\n      MuiInputLabel: {\n        shrink: true,\n      },\n    },\n\n    overrides: {\n      // @ts-ignore can't override while component in lab https://github.com/mui-org/material-ui/issues/12164\n      MuiAutocomplete: {\n        // To prevent autocomplete chips from increasing field height\n        tag: {\n          margin: `0 2px 4px`,\n          height: 24,\n        },\n      },\n    },\n\n    mixins: {\n      ellipsis: {\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n      },\n      popperResponsive: {\n        zIndex: 1640,\n        position: \"static\",\n        float: \"none\",\n        width: \"auto\",\n        marginTop: \"0\",\n        backgroundColor: \"transparent\",\n        border: \"0\",\n        WebkitBoxShadow: \"none\",\n        boxShadow: \"none\",\n        color: \"black\",\n      },\n      dropdown: {\n        borderRadius: \"3px\",\n        border: \"0\",\n        boxShadow: \"0 2px 5px 0 rgba(0, 0, 0, 0.26)\",\n        top: \"100%\",\n        zIndex: 1000,\n        minWidth: \"160px\",\n        padding: \"5px 0\",\n        margin: \"2px 0 0\",\n        fontSize: \"14px\",\n        textAlign: \"left\",\n        listStyle: \"none\",\n        backgroundColor: \"#fff\",\n        WebkitBackgroundClip: \"padding-box\",\n        backgroundClip: \"padding-box\",\n      },\n      dropdownItem: {\n        fontSize: \"13px\",\n        padding: \"10px 20px\",\n        margin: \"0 5px\",\n        borderRadius: \"2px\",\n        WebkitTransition: \"all 150ms linear\",\n        MozTransition: \"all 150ms linear\",\n        OTransition: \"all 150ms linear\",\n        MsTransition: \"all 150ms linear\",\n        transition: \"all 150ms linear\",\n        display: \"block\",\n        clear: \"both\",\n        fontWeight: 400,\n        minHeight: 40,\n        lineHeight: \"1.42857143\",\n        color: \"#333\",\n        whiteSpace: \"nowrap\",\n        height: \"unset\",\n        \"&:hover\": {\n          backgroundColor: \"#fd6a68\",\n          color: \"#FFFFFF\",\n          boxShadow:\n            \"0 12px 20px -10px rgba(156, 39, 176, 0.28), 0 4px 20px 0px rgba(0, 0, 0, 0.12), 0 7px 8px -5px rgba(156, 39, 176, 0.2)\",\n        },\n      },\n    },\n\n    drawerWidth: 260,\n    loadingDelay: \"800ms\",\n  });\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\n// https://material-ui.com/guides/typescript/#customization-of-theme\ndeclare module \"@material-ui/core/styles/createTheme\" {\n  interface Theme {\n    drawerWidth: number;\n    loadingDelay: string;\n  }\n\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    drawerWidth: number;\n    loadingDelay: string;\n  }\n}\n\n// https://github.com/mui-org/material-ui/issues/11853#issuecomment-401425388\ndeclare module \"@material-ui/core/styles/createPalette\" {\n  interface Palette {\n    danger: PaletteColor;\n  }\n\n  interface PaletteOptions {\n    danger: PaletteColorOptions;\n  }\n}\n\ndeclare module \"@material-ui/core/styles/createMixins\" {\n  export interface Mixins {\n    ellipsis: CSSProperties;\n    popperResponsive: CSSProperties;\n    dropdown: CSSProperties;\n    dropdownItem: CSSProperties;\n  }\n}\n","export const Config = {\n  API_URL: \"https://randomuser.me/api?results=\",\n  CONTACTS_SIZE: \"100\",\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  cardMedia: {\n    paddingTop: \"100%\",\n    borderRadius: \"50%\",\n  },\n  tableHeader: {\n    fontSize: 20,\n    borderBottom: \"none\",\n  },\n  tableValue: {\n    fontSize: 20,\n    borderBottom: \"none\",\n  },\n  title: {\n    margin: 0,\n    padding: 0,\n    marginBottom: theme.spacing(2.5),\n  },\n}));\n","import {\n  CardMedia,\n  DialogProps,\n  Grid,\n  TableRow,\n  TableCell,\n  Typography,\n  Table,\n  TableBody,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Contact } from \"../../../model/Contacts\";\nimport { useStyles } from \"./styles\";\n\ninterface Props {\n  dialogProps: DialogProps;\n  selectedContact?: Contact;\n  setModal: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const DetailDialog: React.FC<Props> = ({\n  dialogProps,\n  selectedContact,\n  setModal,\n}) => {\n  const [contact, setContact] = React.useState<Contact>();\n  const classes = useStyles();\n\n  const details = [\n    {\n      key: \"e-mail\",\n      value: contact?.email,\n    },\n    { key: \"phone\", value: contact?.phone },\n    {\n      key: \"street\",\n      value:\n        contact?.location.street.number + \" \" + contact?.location.street.name,\n    },\n    { key: \"city\", value: contact?.location.city },\n    { key: \"state\", value: contact?.location.state },\n    { key: \"postcode\", value: contact?.location.postcode },\n  ];\n\n  const tableData = details.map((item, index) => (\n    <TableRow key={index}>\n      <TableCell className={classes.tableHeader}>\n        <strong>{item.key}</strong>\n      </TableCell>\n      <TableCell align=\"left\" className={classes.tableValue}>\n        {item.value?.toString()}\n      </TableCell>\n    </TableRow>\n  ));\n  React.useEffect(() => {\n    setContact(selectedContact);\n  }, [selectedContact]);\n  return (\n    <Dialog {...dialogProps}>\n      <DialogTitle>Contact Details</DialogTitle>\n      <DialogContent>\n        <Grid container className={classes.root}>\n          <Grid item xs={12} md={4} lg={4}>\n            <CardMedia\n              image={contact?.picture.large}\n              className={classes.cardMedia}\n            />\n          </Grid>\n          <Grid item xs={12} md={8} lg={8}>\n            <Typography\n              variant=\"h3\"\n              color=\"secondary\"\n              className={classes.title}\n            >\n              {contact?.name.last + \", \" + contact?.name.first}\n            </Typography>\n            <Table size=\"small\">\n              <TableBody>{tableData}</TableBody>\n            </Table>\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={(e) => {\n            setModal(false);\n          }}\n          color=\"primary\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    overflow: \"auto\",\n    maxHeight: 485,\n    overflowY: \"scroll\",\n    padding: theme.spacing(1),\n  },\n  card: {\n    marginBottom: theme.spacing(2),\n    width: \"100%\",\n  },\n  cardMedia: {\n    borderRadius: \"50%\",\n    height: 30,\n    width: 30,\n    padding: theme.spacing(2),\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  typography: {\n    paddingLeft: theme.spacing(1.5),\n    textAlign: \"left\",\n    width: \"90%\",\n  },\n\n  info: {\n    width: \"100%\",\n    textAlign: \"center\",\n    margin: 20,\n  },\n\n  img: {\n    width: \"10%\",\n    textAlign: \"right\",\n  },\n  snackbarStyle: {\n    backgroundColor: \"red\",\n  },\n}));\n","import {\n  Box,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Grid,\n  Snackbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\nimport { Config } from \"config/Config\";\nimport * as React from \"react\";\nimport { Contact } from \"../../../../model/Contacts\";\nimport { DetailDialog } from \"./../DetailDialog\";\nimport { useStyles } from \"./styles\";\n\ninterface Props {\n  tabValue: String;\n  setContacts: React.Dispatch<React.SetStateAction<Contact[]>>;\n  contacts: Contact[];\n}\n\nexport const AddressList: React.FC<Props> = ({\n  tabValue,\n  setContacts,\n  contacts,\n}) => {\n  const classes = useStyles();\n  const [showModal, setModal] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  const [selectedContact, setSelectedContact] = React.useState<Contact>();\n\n  const displayContacts = contacts.filter(\n    (f) => f.name.first.charAt(0).toLowerCase() === tabValue.toLowerCase()\n  );\n  const url = `${Config.API_URL}${Config.CONTACTS_SIZE}`;\n\n  React.useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const resp = await fetch(url);\n        const respJson = await resp.json();\n        setContacts(respJson.results);\n      } catch (error) {\n        setError(true);\n      }\n    };\n    fetchContacts();\n  }, [setContacts, url]);\n\n  return (\n    <React.Fragment>\n      {(!displayContacts || displayContacts.length === 0) && (\n        <Typography variant=\"h5\" className={classes.info}>\n          <strong> No Contact(s) found! </strong>\n        </Typography>\n      )}\n      <Grid container className={classes.root}>\n        <Grid item xs={12} md={6} lg={6}>\n          {displayContacts\n            ?.slice(0, Math.ceil(displayContacts.length / 2))\n            .map((contact, index) => (\n              <Card className={classes.card} key={index}>\n                <CardActionArea\n                  onClick={(ev) => {\n                    setSelectedContact(contact);\n                    setModal(true);\n                  }}\n                >\n                  <CardContent className={classes.cardContent}>\n                    <CardMedia\n                      image={contact?.picture.thumbnail}\n                      className={classes.cardMedia}\n                    />\n                    <Typography variant=\"h5\" className={classes.typography}>\n                      {contact.name.last + \", \" + contact.name.first}\n                    </Typography>\n                    <Box className={classes.img}>\n                      <KeyboardArrowRight />\n                    </Box>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            ))}\n        </Grid>\n        <Grid item xs={12} md={6} lg={6}>\n          {displayContacts\n            ?.slice(Math.ceil(displayContacts.length / 2))\n            .map((contact, index) => (\n              <Card className={classes.card} key={index}>\n                <CardActionArea\n                  onClick={(ev) => {\n                    setSelectedContact(contact);\n                    setModal(true);\n                  }}\n                >\n                  <CardContent className={classes.cardContent}>\n                    <CardMedia\n                      image={contact?.picture.thumbnail}\n                      className={classes.cardMedia}\n                    />\n                    <Typography variant=\"h5\" className={classes.typography}>\n                      {contact.name.last + \", \" + contact.name.first}\n                    </Typography>\n                    <Box className={classes.img}>\n                      <KeyboardArrowRight />\n                    </Box>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            ))}\n        </Grid>\n      </Grid>\n      <DetailDialog\n        selectedContact={selectedContact}\n        setModal={setModal}\n        dialogProps={{\n          open: showModal,\n          onClose: (e) => {\n            setModal(false);\n          },\n          fullWidth: true,\n          maxWidth: \"md\",\n        }}\n      />\n\n      <Snackbar\n        open={error}\n        autoHideDuration={2000}\n        message=\"Error occurred!\"\n        color=\"secondary\"\n        onClose={() => setError(false)}\n        ContentProps={{ className: classes.snackbarStyle }}\n      />\n    </React.Fragment>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  typography: {\n    width: \"100%\",\n    textAlign: \"center\",\n    margin: theme.spacing(2),\n  },\n  box: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  tab: {\n    fontSize: 20,\n    minWidth: 59,\n    margin: theme.spacing(0.3),\n    background: theme.palette.common.white,\n  },\n}));\n","import { Box, Tabs, Tab, Typography } from \"@material-ui/core\";\nimport { Contact } from \"model\";\nimport * as React from \"react\";\nimport { TabInfo } from \"../../Address\";\nimport { useStyles } from \"./styles\";\n\ninterface Props {\n  setTab: React.Dispatch<React.SetStateAction<String>>;\n  tabValue: String;\n  contacts: Contact[];\n}\n\nexport const AddressTab: React.FC<Props> = ({ setTab, tabValue, contacts }) => {\n  const classes = useStyles();\n  const handleChange = (_event: React.ChangeEvent<{}>, newValue: string) => {\n    setTab(newValue);\n  };\n\n  const tabsInfo: TabInfo[] = [\n    { tabName: \"A\", count: 0 },\n    { tabName: \"B\", count: 0 },\n    { tabName: \"C\", count: 0 },\n    { tabName: \"D\", count: 0 },\n    { tabName: \"E\", count: 0 },\n    { tabName: \"F\", count: 0 },\n    { tabName: \"G\", count: 0 },\n    { tabName: \"H\", count: 0 },\n    { tabName: \"I\", count: 0 },\n    { tabName: \"J\", count: 0 },\n    { tabName: \"K\", count: 0 },\n    { tabName: \"L\", count: 0 },\n    { tabName: \"M\", count: 0 },\n    { tabName: \"N\", count: 0 },\n    { tabName: \"O\", count: 0 },\n    { tabName: \"P\", count: 0 },\n    { tabName: \"Q\", count: 0 },\n    { tabName: \"R\", count: 0 },\n    { tabName: \"S\", count: 0 },\n    { tabName: \"T\", count: 0 },\n    { tabName: \"U\", count: 0 },\n    { tabName: \"V\", count: 0 },\n    { tabName: \"W\", count: 0 },\n    { tabName: \"X\", count: 0 },\n    { tabName: \"Y\", count: 0 },\n    { tabName: \"Z\", count: 0 },\n  ];\n\n  React.useEffect(() => {\n    function processData() {\n      tabsInfo.forEach((tab) => {\n        tab.count = contacts\n          ? contacts.filter(\n              (f) =>\n                f.name.first.charAt(0).toLowerCase() ===\n                tab.tabName.toLowerCase()\n            ).length\n          : 0;\n      });\n      setAllTabsInfo(tabsInfo);\n    }\n    processData();\n  }, [contacts]);\n\n  const [tabsInfoState, setAllTabsInfo] = React.useState<TabInfo[]>(tabsInfo);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h4\" className={classes.typography}>\n        <strong> CONTACTS LIST </strong>\n      </Typography>\n      <Box className={classes.box}>\n        <Tabs\n          value={tabValue}\n          onChange={handleChange}\n          textColor=\"primary\"\n          indicatorColor=\"primary\"\n          variant=\"scrollable\"\n          TabIndicatorProps={{ style: { height: 5 } }}\n        >\n          {tabsInfoState.map((t, index) => (\n            <Tab\n              value={t.tabName}\n              label={\n                <React.Fragment>\n                  {t.tabName}\n                  <br />\n                  <span\n                    style={{\n                      width: \"100%\",\n                      fontSize: 11,\n                      textAlign: \"right\",\n                    }}\n                  >\n                    {t.count}\n                  </span>\n                </React.Fragment>\n              }\n              href={`#${t.tabName}`}\n              className={classes.tab}\n              disabled={t.count === 0}\n              key={index}\n            />\n          ))}\n        </Tabs>\n      </Box>\n    </React.Fragment>\n  );\n};\n","import { Grid, makeStyles } from \"@material-ui/core\";\nimport { Contact } from \"model\";\nimport * as React from \"react\";\nimport { AddressList } from \"./components/List\";\nimport { AddressTab } from \"./components/Tab\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: 20,\n  },\n}));\n\nexport interface TabInfo {\n  tabName: string;\n  count: number;\n}\n\nexport const Address: React.FC = () => {\n  const classes = useStyles();\n  const [contacts, setContacts] = React.useState<Contact[]>([]);\n  const pathName = window.location.href.substring(\n    window.location.href.indexOf(\"#\") + 1\n  );\n\n  const [tabValue, setTab] = React.useState<String>(\n    pathName.length === 1 && typeof pathName === \"string\"\n      ? pathName.toUpperCase()\n      : \"A\"\n  );\n\n  return (\n    <React.Fragment>\n      <Grid container className={classes.root}>\n        <Grid item xs={12} md={12} lg={12}>\n          <AddressTab setTab={setTab} tabValue={tabValue} contacts={contacts} />\n        </Grid>\n        <Grid item xs={12} md={12} lg={12}>\n          <AddressList\n            tabValue={tabValue}\n            setContacts={setContacts}\n            contacts={contacts}\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import { CssBaseline } from \"@material-ui/core\";\nimport { AppTheme } from \"App.theme\";\nimport * as React from \"react\";\nimport { Address } from \"./view/Address\";\n\ninterface Props {}\n\ninterface State {\n  error?: Error;\n}\n\nexport default class App extends React.Component<Props, State> {\n  /**\n   * https://reactjs.org/docs/hooks-faq.html#how-do-lifecycle-methods-correspond-to-hooks\n   *\n   * componentDidCatch and getDerivedStateFromError: There are no Hook equivalents for these methods yet, but they will be added soon.\n   */\n  public static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  public render() {\n    return (\n      <AppTheme>\n        {/* https://material-ui.com/style/css-baseline/ */}\n        <CssBaseline />\n        <Address />\n      </AppTheme>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}